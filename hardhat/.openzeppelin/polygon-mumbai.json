{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8640e4Ea821f472DCeD6126F202d9A2AC44cbfAa"
  },
  "proxies": [
    {
      "address": "0x4fe4F50B719572b3a5A33516da59eC43F51F4A45",
      "kind": "transparent"
    },
    {
      "address": "0xC3894D90dF7EFCAe8CF34e300CF60FF29Db9a868",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d490769058d4fb43650a6fe279c95c7f259569e2f4f58198f144e5fea2e83519": {
      "address": "0xc4455370dF86b3007d8A3Cf68BF6086efbb1E982",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_eventRecordIds",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(Counter)3285_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:29"
          },
          {
            "label": "_groupIds",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(Counter)3285_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:30"
          },
          {
            "label": "groups",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_struct(Group)4228_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:32"
          },
          {
            "label": "eventRecords",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_struct(EventRecord)4241_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:33"
          },
          {
            "label": "ownGroupIds",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:35"
          },
          {
            "label": "eventIdsByGroupId",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:36"
          },
          {
            "label": "groupIdByEventId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:37"
          },
          {
            "label": "mintNFTAddr",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:40"
          },
          {
            "label": "relayerAddr",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:42"
          },
          {
            "label": "mtxPrice",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:44"
          },
          {
            "label": "maxMintLimit",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:46"
          },
          {
            "label": "operationControllerAddr",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(EventRecord)4241_storage)dyn_storage": {
            "label": "struct EventManager.EventRecord[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Group)4228_storage)dyn_storage": {
            "label": "struct EventManager.Group[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3285_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EventRecord)4241_storage": {
            "label": "struct EventManager.EventRecord",
            "members": [
              {
                "label": "eventRecordId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "date",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "useMtx",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Group)4228_storage": {
            "label": "struct EventManager.Group",
            "members": [
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ownerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b6610ae0db1524ab052bc74193b524eb0d0d4f9e49379acbd539632b66925402": {
      "address": "0x98F18CaA28e51640998C29ae953b97cD7845B491",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:72"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(Counter)3285_storage",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:21"
          },
          {
            "label": "eventManagerAddr",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:23"
          },
          {
            "label": "nftMetaDataURL",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:45"
          },
          {
            "label": "isHoldingEventNFT",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:47"
          },
          {
            "label": "countOfParticipation",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:49"
          },
          {
            "label": "eventNftAttributes",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:51"
          },
          {
            "label": "remainingEventNftCount",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:53"
          },
          {
            "label": "eventSecretPhrases",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:55"
          },
          {
            "label": "isMintLocked",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:57"
          },
          {
            "label": "secretPhraseVerifierAddr",
            "offset": 0,
            "slot": "311",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:58"
          },
          {
            "label": "tokenIdsByEvent",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:60"
          },
          {
            "label": "operationControllerAddr",
            "offset": 0,
            "slot": "313",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3285_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d583636840db8d1d62258e20bb134100e1be18d6f3e743c80d59565582912e07": {
      "address": "0x2Ddd22C7f592Da45584D8a54730b9d1cD3A69227",
      "txHash": "0x86594ef6a008b46e1e11d1350f646b2dc49c9803dda5b7b0f5b23b737405a134",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:72"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(Counter)3023_storage",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:21"
          },
          {
            "label": "eventManagerAddr",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:23"
          },
          {
            "label": "nftMetaDataURL",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:45"
          },
          {
            "label": "isHoldingEventNFT",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:47"
          },
          {
            "label": "countOfParticipation",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:49"
          },
          {
            "label": "eventNftAttributes",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:51"
          },
          {
            "label": "remainingEventNftCount",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:53"
          },
          {
            "label": "eventSecretPhrases",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:55"
          },
          {
            "label": "isMintLocked",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:57"
          },
          {
            "label": "secretPhraseVerifierAddr",
            "offset": 0,
            "slot": "311",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:58"
          },
          {
            "label": "tokenIdsByEvent",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:60"
          },
          {
            "label": "operationControllerAddr",
            "offset": 0,
            "slot": "313",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3023_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "744ee7ba6759c9e8ea94ffb6b45bba34a0687b8631088342ce7432fa6aec22ee": {
      "address": "0xc518B344b813B74d2cCE4ea0A58aFa957a7d5246",
      "txHash": "0xc65731d592771fe42d72e649f2184548ae313f1cacb937d3eba76216c96ab38e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_eventRecordIds",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(Counter)708_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:29"
          },
          {
            "label": "_groupIds",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(Counter)708_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:30"
          },
          {
            "label": "groups",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_struct(Group)793_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:32"
          },
          {
            "label": "eventRecords",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_struct(EventRecord)806_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:33"
          },
          {
            "label": "ownGroupIds",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:35"
          },
          {
            "label": "eventIdsByGroupId",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:36"
          },
          {
            "label": "groupIdByEventId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:37"
          },
          {
            "label": "mintNFTAddr",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:40"
          },
          {
            "label": "relayerAddr",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:42"
          },
          {
            "label": "mtxPrice",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:44"
          },
          {
            "label": "maxMintLimit",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:46"
          },
          {
            "label": "operationControllerAddr",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(EventRecord)806_storage)dyn_storage": {
            "label": "struct EventManager.EventRecord[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Group)793_storage)dyn_storage": {
            "label": "struct EventManager.Group[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)708_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EventRecord)806_storage": {
            "label": "struct EventManager.EventRecord",
            "members": [
              {
                "label": "eventRecordId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "date",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "useMtx",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Group)793_storage": {
            "label": "struct EventManager.Group",
            "members": [
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ownerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "018d19f8742308b15d589471b6bf8599e4afab35b5163e74f3276a1d1aace4cf": {
      "address": "0xb08145D08c6CA9158301DC5334bbfA05AB8083B8",
      "txHash": "0x0ad3478d47d3ae53e7e7e633de9f0b8fddd6f5a1d1bcb8ffd2f95e78b44a5ccb",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_eventRecordIds",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(Counter)708_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:29"
          },
          {
            "label": "_groupIds",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(Counter)708_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:30"
          },
          {
            "label": "groups",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_struct(Group)793_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:32"
          },
          {
            "label": "eventRecords",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_struct(EventRecord)806_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:33"
          },
          {
            "label": "ownGroupIds",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:35"
          },
          {
            "label": "eventIdsByGroupId",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:36"
          },
          {
            "label": "groupIdByEventId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:37"
          },
          {
            "label": "mintNFTAddr",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:40"
          },
          {
            "label": "relayerAddr",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:42"
          },
          {
            "label": "mtxPrice",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:44"
          },
          {
            "label": "maxMintLimit",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:46"
          },
          {
            "label": "operationControllerAddr",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(EventRecord)806_storage)dyn_storage": {
            "label": "struct EventManager.EventRecord[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Group)793_storage)dyn_storage": {
            "label": "struct EventManager.Group[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)708_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EventRecord)806_storage": {
            "label": "struct EventManager.EventRecord",
            "members": [
              {
                "label": "eventRecordId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "date",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "useMtx",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Group)793_storage": {
            "label": "struct EventManager.Group",
            "members": [
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ownerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "34ff29aca1b9fa7cef5f37ad812b06045b780b54e2f7a0b458506d76fd11d05e": {
      "address": "0xf8713cbc3851d86537B65C30dc72Bfb379DAB4F9",
      "txHash": "0x59dd4c40da07cd10ff220013dfbff7e8461500ebdf74dbd5d52b14b58bb87122",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:72"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(Counter)3023_storage",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:21"
          },
          {
            "label": "eventManagerAddr",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:23"
          },
          {
            "label": "nftMetaDataURL",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:45"
          },
          {
            "label": "isHoldingEventNFT",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:47"
          },
          {
            "label": "countOfParticipation",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:49"
          },
          {
            "label": "eventNftAttributes",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:51"
          },
          {
            "label": "remainingEventNftCount",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:53"
          },
          {
            "label": "eventSecretPhrases",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:55"
          },
          {
            "label": "isMintLocked",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:57"
          },
          {
            "label": "secretPhraseVerifierAddr",
            "offset": 0,
            "slot": "311",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:58"
          },
          {
            "label": "tokenIdsByEvent",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:60"
          },
          {
            "label": "operationControllerAddr",
            "offset": 0,
            "slot": "313",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3023_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3f54feba050b39239fce9c5e7803c2654ff6e5932b4e244c8da088b013f88376": {
      "address": "0xa582cAd41DE1ab49e69F9a0E88b428de8376716e",
      "txHash": "0xdc8ef3480f412b0f63e50b96f1e243b2a16a19e8d04c4dec50ed1ae126040011",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:72"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(Counter)3023_storage",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:21"
          },
          {
            "label": "eventManagerAddr",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:23"
          },
          {
            "label": "nftMetaDataURL",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:45"
          },
          {
            "label": "isHoldingEventNFT",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:47"
          },
          {
            "label": "countOfParticipation",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:49"
          },
          {
            "label": "eventNftAttributes",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:51"
          },
          {
            "label": "remainingEventNftCount",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:53"
          },
          {
            "label": "eventSecretPhrases",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:55"
          },
          {
            "label": "isMintLocked",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:57"
          },
          {
            "label": "secretPhraseVerifierAddr",
            "offset": 0,
            "slot": "311",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:58"
          },
          {
            "label": "tokenIdsByEvent",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:60"
          },
          {
            "label": "operationControllerAddr",
            "offset": 0,
            "slot": "313",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3023_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9579ec4d760420aea12e0e94f3c7a525fb70bfb6eb9d9892476a41b8e420cdf0": {
      "address": "0x766A45ffc323Ebe18057DB8E4F2e78DFA133DEFe",
      "txHash": "0x834ab7e474d71672d9de2c48afcea54db621a651d29dc1019bb3a79bf8f9230b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:72"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(Counter)3285_storage",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:21"
          },
          {
            "label": "eventManagerAddr",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:23"
          },
          {
            "label": "nftMetaDataURL",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:45"
          },
          {
            "label": "isHoldingEventNFT",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:47"
          },
          {
            "label": "countOfParticipation",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:49"
          },
          {
            "label": "eventNftAttributes",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:51"
          },
          {
            "label": "remainingEventNftCount",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:53"
          },
          {
            "label": "eventSecretPhrases",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:55"
          },
          {
            "label": "isMintLocked",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:57"
          },
          {
            "label": "secretPhraseVerifierAddr",
            "offset": 0,
            "slot": "311",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:58"
          },
          {
            "label": "tokenIdsByEvent",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:60"
          },
          {
            "label": "operationControllerAddr",
            "offset": 0,
            "slot": "313",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3285_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d78eaf1e38449d156e3f873c482f4e35b9560532967293704922208b39dcc322": {
      "address": "0xCDb9428A4C8c5858FA9fF9533ACC1dBE1Ee7e5EF",
      "txHash": "0xa10ebf2e2865b54c0bdf1b83449b5c516e1784a2012f4c87ac62089d338e2ddc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_eventRecordIds",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(Counter)3285_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:35"
          },
          {
            "label": "_groupIds",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(Counter)3285_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:36"
          },
          {
            "label": "groups",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_struct(Group)4228_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:38"
          },
          {
            "label": "eventRecords",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_struct(EventRecord)4241_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:39"
          },
          {
            "label": "ownGroupIds",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:41"
          },
          {
            "label": "eventIdsByGroupId",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:42"
          },
          {
            "label": "groupIdByEventId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:43"
          },
          {
            "label": "mintNFTAddr",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:46"
          },
          {
            "label": "relayerAddr",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:48"
          },
          {
            "label": "mtxPrice",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:50"
          },
          {
            "label": "maxMintLimit",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:52"
          },
          {
            "label": "operationControllerAddr",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:54"
          },
          {
            "label": "memberRolesByGroupId",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_bytes32,t_bool)))",
            "contract": "EventManager",
            "src": "contracts/Event.sol:60"
          },
          {
            "label": "memberAddressesByGroupId",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(EventRecord)4241_storage)dyn_storage": {
            "label": "struct EventManager.EventRecord[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Group)4228_storage)dyn_storage": {
            "label": "struct EventManager.Group[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(address => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_bytes32,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(bytes32 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3285_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EventRecord)4241_storage": {
            "label": "struct EventManager.EventRecord",
            "members": [
              {
                "label": "eventRecordId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "date",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "useMtx",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Group)4228_storage": {
            "label": "struct EventManager.Group",
            "members": [
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ownerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
