{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x84Ef27F16ab1128c6f24Fc34D30950da0932A394",
    "txHash": "0xf09ef32d8bb469d3dea59d7274e12525f65fb495bb88ef67fa94d3b1ed86df45"
  },
  "proxies": [
    {
      "address": "0x7d895Ca96caa5344EC0b732c6e1DEfa560671e14",
      "txHash": "0x429eecff9b538ffb5636cc8656a712566a0ff35916284e853029488a8bfbf764",
      "kind": "transparent"
    },
    {
      "address": "0xFe2fe598E6C8B2fe66E55D5545D7d0aE4d52fCA1",
      "kind": "transparent"
    }
  ],
  "impls": {
    "cba368af67885fcd8db2811c5b4020f439b4897ca5d92118bdc05acbc67a118d": {
      "address": "0xc329683ef29FA828350DAEdF34cB970e1BEBe3c4",
      "txHash": "0xd0de0635493fa87318e73141f4fda6cfad4d56925a4601d3e7c713f14cd59266",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:72"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(Counter)3158_storage",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:18"
          },
          {
            "label": "eventManagerAddr",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:20"
          },
          {
            "label": "nftMetaDataURL",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:33"
          },
          {
            "label": "isHoldingEventNFT",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:35"
          },
          {
            "label": "countOfParticipation",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:37"
          },
          {
            "label": "eventNftAttributes",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:39"
          },
          {
            "label": "remainingEventNftCount",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:41"
          },
          {
            "label": "eventSecretPhrases",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3158_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "368e4c609b9166305fb8c1ba6725cb0d81d0c68c35a40f40f9b2bb5e8d134efb": {
      "address": "0xD2b2327fAc47B877DE7B1a97A38E20983a73CeeF",
      "txHash": "0xe509b8b17d9b5febe4b76d1edbdf5a3815ad98081932946451147e439cb9ce45",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_eventRecordIds",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(Counter)3158_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:27"
          },
          {
            "label": "_groupIds",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(Counter)3158_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:28"
          },
          {
            "label": "groups",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_struct(Group)4099_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:30"
          },
          {
            "label": "eventRecords",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_struct(EventRecord)4112_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:31"
          },
          {
            "label": "ownGroupIds",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:33"
          },
          {
            "label": "eventIdsByGroupId",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:34"
          },
          {
            "label": "groupIdByEventId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:35"
          },
          {
            "label": "mintNFTAddr",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:38"
          },
          {
            "label": "relayerAddr",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:40"
          },
          {
            "label": "mtxPrice",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:42"
          },
          {
            "label": "maxMintLimit",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(EventRecord)4112_storage)dyn_storage": {
            "label": "struct EventManager.EventRecord[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Group)4099_storage)dyn_storage": {
            "label": "struct EventManager.Group[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3158_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EventRecord)4112_storage": {
            "label": "struct EventManager.EventRecord",
            "members": [
              {
                "label": "eventRecordId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "date",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "useMtx",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Group)4099_storage": {
            "label": "struct EventManager.Group",
            "members": [
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ownerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e2c6b1ab5e0dfe12f590d16b77ab462ff3b7c03eff20c1dda5abcfa184156bf9": {
      "address": "0x78E1E8b2837DbB42dfdE3e1a8A3344981294fCE0",
      "txHash": "0xcf5388f25b9f477a071750a268461512b8a2368499ad98e6bf930ecf418ba34d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:72"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(Counter)3023_storage",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:18"
          },
          {
            "label": "eventManagerAddr",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:20"
          },
          {
            "label": "nftMetaDataURL",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:33"
          },
          {
            "label": "isHoldingEventNFT",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:35"
          },
          {
            "label": "countOfParticipation",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:37"
          },
          {
            "label": "eventNftAttributes",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:39"
          },
          {
            "label": "remainingEventNftCount",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:41"
          },
          {
            "label": "eventSecretPhrases",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3023_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b57fd7a04eea9b8bc0d823b607fa29085e1622afbe0774de52439d9607cf2738": {
      "address": "0x9b8D03275d3A3456265f8882bD142587fE3b4122",
      "txHash": "0x4ded4cadc36b8ea8b25d4b6e0c69a883497450fa34d4c2a6585f3369bce7d693",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:72"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(Counter)3023_storage",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:19"
          },
          {
            "label": "eventManagerAddr",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:21"
          },
          {
            "label": "nftMetaDataURL",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:34"
          },
          {
            "label": "isHoldingEventNFT",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:36"
          },
          {
            "label": "countOfParticipation",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:38"
          },
          {
            "label": "eventNftAttributes",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:40"
          },
          {
            "label": "remainingEventNftCount",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:42"
          },
          {
            "label": "eventSecretPhrases",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:44"
          },
          {
            "label": "isMintLocked",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3023_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a91a88cdc697be1f0586a6b4ded8029b5434adda18490913b91694cebda8a396": {
      "address": "0x2a84c574D5Fd46B68cB7f3cDCe98A31691933cE7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_eventRecordIds",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(Counter)708_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:27"
          },
          {
            "label": "_groupIds",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(Counter)708_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:28"
          },
          {
            "label": "groups",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_struct(Group)791_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:30"
          },
          {
            "label": "eventRecords",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_struct(EventRecord)804_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:31"
          },
          {
            "label": "ownGroupIds",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:33"
          },
          {
            "label": "eventIdsByGroupId",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:34"
          },
          {
            "label": "groupIdByEventId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:35"
          },
          {
            "label": "mintNFTAddr",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:38"
          },
          {
            "label": "relayerAddr",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:40"
          },
          {
            "label": "mtxPrice",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:42"
          },
          {
            "label": "maxMintLimit",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(EventRecord)804_storage)dyn_storage": {
            "label": "struct EventManager.EventRecord[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Group)791_storage)dyn_storage": {
            "label": "struct EventManager.Group[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)708_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EventRecord)804_storage": {
            "label": "struct EventManager.EventRecord",
            "members": [
              {
                "label": "eventRecordId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "date",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "useMtx",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Group)791_storage": {
            "label": "struct EventManager.Group",
            "members": [
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ownerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e2ef36d9ae7520e2e42d6123ced87e1c4a8815b40e5ae254676c69e7cedbb529": {
      "address": "0x06146979eA92AE2c90563255852b9405CbDb641E",
      "txHash": "0xc549c2b1ad927c265846e0cf2836a2d4be9d913cda20d298c934bdbcb0ceeab4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_eventRecordIds",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(Counter)708_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:27"
          },
          {
            "label": "_groupIds",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(Counter)708_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:28"
          },
          {
            "label": "groups",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_struct(Group)791_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:30"
          },
          {
            "label": "eventRecords",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_struct(EventRecord)804_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:31"
          },
          {
            "label": "ownGroupIds",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:33"
          },
          {
            "label": "eventIdsByGroupId",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:34"
          },
          {
            "label": "groupIdByEventId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:35"
          },
          {
            "label": "mintNFTAddr",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:38"
          },
          {
            "label": "relayerAddr",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:40"
          },
          {
            "label": "mtxPrice",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:42"
          },
          {
            "label": "maxMintLimit",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(EventRecord)804_storage)dyn_storage": {
            "label": "struct EventManager.EventRecord[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Group)791_storage)dyn_storage": {
            "label": "struct EventManager.Group[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)708_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EventRecord)804_storage": {
            "label": "struct EventManager.EventRecord",
            "members": [
              {
                "label": "eventRecordId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "date",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "useMtx",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Group)791_storage": {
            "label": "struct EventManager.Group",
            "members": [
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ownerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
